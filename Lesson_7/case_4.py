"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
31 22
37 43
51 86
3 5 32
2 4 6
-1 64 -8
3 5 8 3
8 3 7 1
Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
 Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:

    def __init__(self, lst):
        self.lst = lst

    def __getitem__(self, idx):
        return self.lst[idx]

    def __str__(self):
        return '\n'.join('\t'.join(map(str, row)) for row in self.lst)

    def __add__(self, other):
        other = Matrix(other)
        result = []
        numbers = []
        for i in range(len(self.lst)):
            for j in range(len(self.lst[0])):
                summa = other[i][j] + self.lst[i][j]
                numbers.append(summa)
                if len(numbers) == len(self.lst[i]):
                    result.append(numbers)
                    numbers = []
        return Matrix(result)


a = Matrix([[31, 22], [37, 43], [51, 86]])
b = Matrix([[31, 22], [37, 43], [51, 86]])
print(a + b)



